#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

version: '2.1'

services:
  # h2db:
  #   build:
  #     context: .
  #     dockerfile: ../../../base/Dockerfile.h2
  #   networks:
  #     - e2e
  #   expose:
  #     - 1521
  #   healthcheck:
  #     test: ["CMD", "bash", "-c", "cat < /dev/null > /dev/tcp/127.0.0.1/1521"]
  #     interval: 5s
  #     timeout: 60s
  #     retries: 120

  # oap:
  #   image: ghcr.io/apache/skywalking/oap:${SW_OAP_COMMIT}
  #   expose:
  #     - 11800
  #     - 12800
  #     - 10051
  #     - 5005
  #   ports:
  #     - 12800
  #   networks:
  #     - e2e
  #   # volumes:
  #     # - ./../prepare/setup-oap/download-mysql.sh:/download-mysql.sh
  #     # - ./../prepare/setup-oap/log4j2.xml:/skywalking/config/log4j2.xml
  #   environment:
  #     SW_CLUSTER_ZK_HOST_PORT: zk:2181
  #     SW_STORAGE_ES_CLUSTER_NODES: es:9200
  #     SW_JDBC_URL: jdbc:mysql://mysql:3306/swtest
  #     SW_STORAGE_INFLUXDB_URL: http://influxdb:8086
  #     SW_STORAGE_BANYANDB_HOST: "banyandb"
  #     SW_STORAGE_IOTDB_HOST: iotdb
  #     SW_STORAGE_IOTDB_SESSIONPOOL_SIZE: 2
  #     SW_CONFIG_ETCD_PERIOD: 1
  #     SW_CONFIG_ETCD_ENDPOINTS: http://etcd:2379
  #     SW_CLUSTER_ETCD_ENDPOINTS: http://etcd:2379
  #     SW_STORAGE: h2
  #     SW_STORAGE_H2_URL: jdbc:h2:tcp://h2db:1521/skywalking-oap-db
  #   healthcheck:
  #     test: ["CMD", "bash", "-c", "cat < /dev/null > /dev/tcp/127.0.0.1/11800"]
  #     interval: 5s
  #     timeout: 60s
  #     retries: 120
  #   depends_on:
  #     h2db:
  #       condition: service_healthy

  oap:
    extends:
      file: ../../../base/docker-compose.base.yml
      service: oap
    ports:
      - "12800"


  provider:
    extends:
      file: ../../../base/docker-compose.base.yml
      service: provider
    ports:
      - "9090"
    volumes:
      - ../../../base/provider/flask_provider.py:/services/provider.py
    environment:
      SW_AGENT_COLLECTOR_BACKEND_SERVICES: oap:11800
    depends_on:
      oap:
        condition: service_healthy

  consumer:
    extends:
      file: ../../../base/docker-compose.base.yml
      service: consumer
    environment:
      SW_AGENT_COLLECTOR_BACKEND_SERVICES: oap:11800
    ports:
      - "9090"
    depends_on:
      provider:
        condition: service_healthy

    

networks:
  e2e: